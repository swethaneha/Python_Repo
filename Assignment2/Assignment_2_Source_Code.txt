Task1:

1.1 Write a Python Program to implement your own myreduce() function which works exactly like
Python's built-in function reduce()

a=[1,2,3,4,5]
from functools import reduce
#print(reduce(lambda x,y : x*y,a))#output=120
def func(a):
    sum=1
    for i in range(len(a)):
        sum=sum*a[i]
    return sum
def myreduce(func,a):
    print(func(a))
myreduce(func,a)

------------------------------------------------------------------------------------------------------------------------------

1.2 Write a Python program to implement your own myfilter() function which works exactly like
Python's built-in function filter()



def func(a):
    l1=[]
    for i in range(len(a)):
        if ((a[i]%2==0) and (a[i]%3==0)):
            l1.append(a[i])
    return l1
def myfilter(func,a):
      print(list(func(a)))

a=[1,2,3,4,5,6,7,8,9,10,12,14,16,22 ]
myfilter(func,a)


------------------------------------------------------------------------------------------------------------------------------
2.List comprehension:

print(list(ch for ch in ['A','C','A','D','G','I','L','D']))
print(list(i*j for i in ['x','y','z'] for j in range(1,5)))
print(list(i*j for j in range(1,5) for i in ['x','y','z']))
print(list([x+y] for x in range(2,5) for y in range(3)),end='')
print()
print(list(list(i+j for j in range(4)) for i in range(2,6)),end='')
print()
print(list((j,i) for i in range(1,4) for j in range(1,4)),end='')

------------------------------------------------------------------------------------------------------------------------------
3.Implement a function longestWord() that takes a list of words and returns the longest one.

words=input('enter the words')

def longestword(words):
    list1=words.split(' ')
    print(max(list1,key=len))

------------------------------------------------------------------------------------------------------------------------------
TASK 2
1.1 Write a Python Program(with class concepts) to find the area of the triangle using the below
formula.
area = (s*(s-a)*(s-b)*(s-c)) ** 0.5

class Triangle():
    def __init__(self):
        self.a = int(input('Enter a:'))
        self.b = int(input('Enter b:'))
        self.c = int(input('Enter c:'))
        self.s = int(input('Enter s:'))
class TriangleArea(Triangle):
    def __init__(self, *args):
        objTri = Triangle()
        print((objTri.s*(objTri.s-objTri.a)*(objTri.s-objTri.b)*(objTri.s-objTri.c)) ** 0.5)

objArea = TriangleArea()

------------------------------------------------------------------------------------------------------------------------------
1.2 Write a function filter_long_words() that takes a list of words and an integer n and returns the list
of words that are longer than n

def longestword(words,n):
    list1=words.split(' ')
    print(list(word for word in list1 if len(word)>n))
longestword(input('enter a list of  words'),int(input('Enter a number')))



------------------------------------------------------------------------------------------------------------------------------
1.3 Write a Python program using function concept that maps list of words into a list of integers
representing the lengths of the corresponding words.

#Method1:
list1=list(map(lambda word:len(word),['Hello','World','Good','Day']))
print(list1)

#Method2
def LengthofWords(Words):
    l1=Words.split(' ')
    l2=[]
    for i in range(len(l1)):
        l2.append(len(l1[i]))
    return l2
print(LengthofWords(input('Enter Words')))

------------------------------------------------------------------------------------------------------------------------------
1.4 Write a Python function which takes a character (i.e. a string of length 1) and returns True if it is
a vowel, False otherwise.

def Vowels(Character):
    vowel=['a','e','i','o','u']
    if Character.lower() in vowel:
        return 'True'
    else:
        return 'False'
print( Vowels('a'),Vowels('b'),Vowels('A'),sep='\n')



